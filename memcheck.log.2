==3600== Memcheck, a memory error detector
==3600== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==3600== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==3600== Command: ./pe01
==3600== Parent PID: 30163
==3600== 
==3600== Use of uninitialised value of size 8
==3600==    at 0x3161643A9B: _itoa_word (in /lib64/libc-2.12.so)
==3600==    by 0x3161646652: vfprintf (in /lib64/libc-2.12.so)
==3600==    by 0x316164F189: printf (in /lib64/libc-2.12.so)
==3600==    by 0x400938: printArray (pe01.c:27)
==3600==    by 0x400C1F: test_largest_partial_sum (pe01.c:115)
==3600==    by 0x400D3E: test_00_largest_partial_sum (pe01.c:141)
==3600==    by 0x400DC6: main (pe01.c:174)
==3600== 
==3600== Conditional jump or move depends on uninitialised value(s)
==3600==    at 0x3161643AA5: _itoa_word (in /lib64/libc-2.12.so)
==3600==    by 0x3161646652: vfprintf (in /lib64/libc-2.12.so)
==3600==    by 0x316164F189: printf (in /lib64/libc-2.12.so)
==3600==    by 0x400938: printArray (pe01.c:27)
==3600==    by 0x400C1F: test_largest_partial_sum (pe01.c:115)
==3600==    by 0x400D3E: test_00_largest_partial_sum (pe01.c:141)
==3600==    by 0x400DC6: main (pe01.c:174)
==3600== 
==3600== Conditional jump or move depends on uninitialised value(s)
==3600==    at 0x31616450E3: vfprintf (in /lib64/libc-2.12.so)
==3600==    by 0x316164F189: printf (in /lib64/libc-2.12.so)
==3600==    by 0x400938: printArray (pe01.c:27)
==3600==    by 0x400C1F: test_largest_partial_sum (pe01.c:115)
==3600==    by 0x400D3E: test_00_largest_partial_sum (pe01.c:141)
==3600==    by 0x400DC6: main (pe01.c:174)
==3600== 
==3600== Conditional jump or move depends on uninitialised value(s)
==3600==    at 0x3161645101: vfprintf (in /lib64/libc-2.12.so)
==3600==    by 0x316164F189: printf (in /lib64/libc-2.12.so)
==3600==    by 0x400938: printArray (pe01.c:27)
==3600==    by 0x400C1F: test_largest_partial_sum (pe01.c:115)
==3600==    by 0x400D3E: test_00_largest_partial_sum (pe01.c:141)
==3600==    by 0x400DC6: main (pe01.c:174)
==3600== 
==3600== 
==3600== HEAP SUMMARY:
==3600==     in use at exit: 0 bytes in 0 blocks
==3600==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==3600== 
==3600== All heap blocks were freed -- no leaks are possible
==3600== 
==3600== For counts of detected and suppressed errors, rerun with: -v
==3600== Use --track-origins=yes to see where uninitialised values come from
==3600== ERROR SUMMARY: 22 errors from 4 contexts (suppressed: 6 from 6)
